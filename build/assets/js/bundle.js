!function o(n,r,u){function s(e,t){if(!r[e]){if(!n[e]){var i="function"==typeof require&&require;if(!t&&i)return i(e,!0);if(a)return a(e,!0);throw(i=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",i}i=r[e]={exports:{}},n[e][0].call(i.exports,function(t){return s(n[e][1][t]||t)},i,i.exports,o,n,r,u)}return r[e].exports}for(var a="function"==typeof require&&require,t=0;t<u.length;t++)s(u[t]);return s}({1:[function(t,e,i){"use strict";var o=t("./tasks/task-1"),t=document.querySelector("#task-1");(0,o.initTaskOne)(t)},{"./tasks/task-1":2}],2:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.initTaskOne=void 0;var o,n=(o=t("../utils/timer"))&&o.__esModule?o:{default:o},r=t("../utils/count-from-to");i.initTaskOne=function(t){t.addEventListener("click",function(t){t.preventDefault();var e=t.currentTarget;"BUTTON"===t.target.nodeName&&e.reportValidity()&&((0,r.countFromTo)(Number(e.querySelector("#task-1l-I").value),Number(e.querySelector("#task-1l-J").value),{delay:1e3,mod:n.default.Mod.CYCLE,type:n.default.Type.SET_TIMEOUT},function(t){e.querySelector("#task-1l-R").value=t}),(0,r.countFromTo)(Number(e.querySelector("#task-1r-I").value),Number(e.querySelector("#task-1r-J").value),{delay:1e3,mod:n.default.Mod.CYCLE,type:n.default.Type.SET_INTERVAL},function(t){e.querySelector("#task-1r-R").value=t}))})}},{"../utils/count-from-to":3,"../utils/timer":4}],3:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.countFromTo=void 0;var o,r=(o=t("./timer"))&&o.__esModule?o:{default:o};i.countFromTo=function(t,e,i){var o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:function(){},n=new r.default(i);n.action=function(){o(t),t===e&&n.stop(),t<e&&t++,e<t&&t--},n.start()}},{"./timer":4}],4:[function(t,e,i){"use strict";function o(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var n=function(){function n(t){var e=t.action,i=void 0===e?function(){}:e,o=t.mod,e=void 0===o?n.Mod.TICK:o,o=t.delay,o=void 0===o?1e3:o,t=t.type,t=void 0===t?n.Type.SET_TIMEOUT:t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this._timerID=null,this._delay=o,this._action=i,this._mod=e,this._type=t,this._status=n.Status.STOP}var t,e,i;return t=n,(e=[{key:"action",set:function(t){this.stop(),this._action=t}},{key:"delay",set:function(t){this.stop(),this._delay=t}},{key:"mod",set:function(t){this.stop(),this._mod=t}},{key:"type",set:function(t){this.stop(),this._type=t}},{key:"start",value:function(){switch(this.stop(),this._status=n.Status.START,this._mod){case n.Mod.TICK:return void this._tick();case n.Mod.CYCLE:return this._action(),void this._cycle()}}},{key:"stop",value:function(){null!==this._timerID&&clearTimeout(this._timerID),this._status=n.Status.STOP}},{key:"_tick",value:function(){function t(){e._action(),e.stop()}var e=this;this._timerID=(this._type===n.Type.SET_TIMEOUT?setTimeout:setInterval)(t,this._delay)}},{key:"_cycle",value:function(){var t=this;this._timerID=this._type===n.Type.SET_TIMEOUT?setTimeout(function(){t._action(),t._status===n.Status.START&&t._cycle()},this._delay):setInterval(function(){return t._action()},this._delay)}}])&&o(t.prototype,e),i&&o(t,i),n}();n.Type={SET_TIMEOUT:"setTimeout",SET_INTERVAL:"setInterval"},n.Mod={TICK:"tick",CYCLE:"cycle"},n.Status={STOP:"stop",START:"start"},i.default=n},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvaW5kZXguanMiLCJzcmMvanMvdGFza3MvdGFzay0xLmpzIiwic3JjL2pzL3V0aWxzL2NvdW50LWZyb20tdG8uanMiLCJzcmMvanMvdXRpbHMvdGltZXIuanMiXSwibmFtZXMiOlsiciIsImUiLCJuIiwidCIsIm8iLCJpIiwiZiIsImMiLCJyZXF1aXJlIiwidSIsImEiLCJFcnJvciIsImNvZGUiLCJwIiwiZXhwb3J0cyIsImNhbGwiLCJsZW5ndGgiLCIxIiwibW9kdWxlIiwiX3Rhc2siLCJ0YXNrT25lTm9kZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImluaXRUYXNrT25lIiwiX3RpbWVyIiwiX2NvdW50RnJvbVRvIiwiZm9ybU5vZGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJmb3JtIiwiY3VycmVudFRhcmdldCIsInRhcmdldCIsIm5vZGVOYW1lIiwicmVwb3J0VmFsaWRpdHkiLCJjb3VudEZyb21UbyIsIk51bWJlciIsInZhbHVlIiwiZGVsYXkiLCJtb2QiLCJNb2QiLCJDWUNMRSIsInR5cGUiLCJUeXBlIiwiU0VUX1RJTUVPVVQiLCJTRVRfSU5URVJWQUwiLCJiIiwidGltZXJPcHRpb25zIiwiY2FsbGJhY2siLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJ0aW1lciIsImFjdGlvbiIsInN0b3AiLCJzdGFydCIsIlRpbWVyIiwiX3JlZiIsIl9yZWYkYWN0aW9uIiwiX3JlZiRtb2QiLCJUSUNLIiwiX3JlZiRkZWxheSIsIl9yZWYkdHlwZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfdGltZXJJRCIsIl9kZWxheSIsIl9hY3Rpb24iLCJfbW9kIiwiX3R5cGUiLCJfc3RhdHVzIiwiU3RhdHVzIiwiU1RPUCIsIlNUQVJUIiwiX3RpY2siLCJfY3ljbGUiLCJjbGVhclRpbWVvdXQiLCJhY3Rpb25XaXRoU3RvcCIsIl90aGlz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LFdBQVdILEtBQUtFLGEsZ0NBSS9EVixFQUFNWixLQUFPLENBQ1hDLFlBQVcsYUFDWEMsYUFBWSxlQUdkVSxFQUFNZixJQUFNLENBQ1ZtQixLQUFJLE9BQ0psQixNQUFLLFNBR1BjLEVBQU1lLE9BQVMsQ0FDYkMsS0FBSSxPQUNKQyxNQUFLLG1CQUdRakIiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImltcG9ydCB7aW5pdFRhc2tPbmV9IGZyb20gXCIuL3Rhc2tzL3Rhc2stMVwiO1xuXG5jb25zdCB0YXNrT25lTm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrLTFgKTtcbmluaXRUYXNrT25lKHRhc2tPbmVOb2RlKTtcbiIsImltcG9ydCBUaW1lciBmcm9tIFwiLi4vdXRpbHMvdGltZXJcIjtcbmltcG9ydCB7Y291bnRGcm9tVG99IGZyb20gXCIuLi91dGlscy9jb3VudC1mcm9tLXRvXCI7XG5cbmV4cG9ydCBjb25zdCBpbml0VGFza09uZSA9IChmb3JtTm9kZSkgPT4ge1xuICBjb25zdCBvbkZvcm1TdGFydEJ0bkNsaWNrID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGZvcm0gPSBldnQuY3VycmVudFRhcmdldDtcbiAgICBjb25zdCB0YXJnZXQgPSBldnQudGFyZ2V0O1xuXG4gICAgaWYgKHRhcmdldC5ub2RlTmFtZSAhPT0gYEJVVFRPTmApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWZvcm0ucmVwb3J0VmFsaWRpdHkoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvdW50RnJvbVRvKFxuICAgICAgICBOdW1iZXIoZm9ybS5xdWVyeVNlbGVjdG9yKGAjdGFzay0xbC1JYCkudmFsdWUpLFxuICAgICAgICBOdW1iZXIoZm9ybS5xdWVyeVNlbGVjdG9yKGAjdGFzay0xbC1KYCkudmFsdWUpLFxuICAgICAgICB7XG4gICAgICAgICAgZGVsYXk6IDEwMDAsXG4gICAgICAgICAgbW9kOiBUaW1lci5Nb2QuQ1lDTEUsXG4gICAgICAgICAgdHlwZTogVGltZXIuVHlwZS5TRVRfVElNRU9VVFxuICAgICAgICB9LFxuICAgICAgICAodmFsdWUpID0+IHtcbiAgICAgICAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoYCN0YXNrLTFsLVJgKS52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgKTtcblxuICAgIGNvdW50RnJvbVRvKFxuICAgICAgICBOdW1iZXIoZm9ybS5xdWVyeVNlbGVjdG9yKGAjdGFzay0xci1JYCkudmFsdWUpLFxuICAgICAgICBOdW1iZXIoZm9ybS5xdWVyeVNlbGVjdG9yKGAjdGFzay0xci1KYCkudmFsdWUpLFxuICAgICAgICB7XG4gICAgICAgICAgZGVsYXk6IDEwMDAsXG4gICAgICAgICAgbW9kOiBUaW1lci5Nb2QuQ1lDTEUsXG4gICAgICAgICAgdHlwZTogVGltZXIuVHlwZS5TRVRfSU5URVJWQUxcbiAgICAgICAgfSxcbiAgICAgICAgKHZhbHVlKSA9PiB7XG4gICAgICAgICAgZm9ybS5xdWVyeVNlbGVjdG9yKGAjdGFzay0xci1SYCkudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICk7XG4gIH07XG5cbiAgZm9ybU5vZGUuYWRkRXZlbnRMaXN0ZW5lcihgY2xpY2tgLCBvbkZvcm1TdGFydEJ0bkNsaWNrKTtcbn07XG4iLCJpbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIjtcblxuZXhwb3J0IGNvbnN0IGNvdW50RnJvbVRvID0gKGEsIGIsIHRpbWVyT3B0aW9ucywgY2FsbGJhY2sgPSAoKSA9PiB7fSkgPT4ge1xuICBjb25zdCB0aW1lciA9IG5ldyBUaW1lcih0aW1lck9wdGlvbnMpO1xuICB0aW1lci5hY3Rpb24gPSAoKSA9PiB7XG4gICAgY2FsbGJhY2soYSk7XG5cbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgdGltZXIuc3RvcCgpO1xuICAgIH1cblxuICAgIGlmIChhIDwgYikge1xuICAgICAgYSsrO1xuICAgIH1cblxuICAgIGlmIChhID4gYikge1xuICAgICAgYS0tO1xuICAgIH1cbiAgfTtcbiAgdGltZXIuc3RhcnQoKTtcbn07XG4iLCJjbGFzcyBUaW1lciB7XG4gIGNvbnN0cnVjdG9yKHthY3Rpb24gPSAoKSA9PiB7fSwgbW9kID0gVGltZXIuTW9kLlRJQ0ssIGRlbGF5ID0gMTAwMCwgdHlwZSA9IFRpbWVyLlR5cGUuU0VUX1RJTUVPVVR9KSB7XG4gICAgdGhpcy5fdGltZXJJRCA9IG51bGw7XG4gICAgdGhpcy5fZGVsYXkgPSBkZWxheTtcbiAgICB0aGlzLl9hY3Rpb24gPSBhY3Rpb247XG4gICAgdGhpcy5fbW9kID0gbW9kO1xuICAgIHRoaXMuX3R5cGUgPSB0eXBlO1xuICAgIHRoaXMuX3N0YXR1cyA9IFRpbWVyLlN0YXR1cy5TVE9QO1xuICB9XG5cbiAgc2V0IGFjdGlvbihhY3Rpb24pIHtcbiAgICB0aGlzLnN0b3AoKTtcbiAgICB0aGlzLl9hY3Rpb24gPSBhY3Rpb247XG4gIH1cblxuICBzZXQgZGVsYXkoZGVsYXkpIHtcbiAgICB0aGlzLnN0b3AoKTtcbiAgICB0aGlzLl9kZWxheSA9IGRlbGF5O1xuICB9XG5cbiAgc2V0IG1vZChtb2QpIHtcbiAgICB0aGlzLnN0b3AoKTtcbiAgICB0aGlzLl9tb2QgPSBtb2Q7XG4gIH1cblxuICBzZXQgdHlwZSh0eXBlKSB7XG4gICAgdGhpcy5zdG9wKCk7XG4gICAgdGhpcy5fdHlwZSA9IHR5cGU7XG4gIH1cblxuICBzdGFydCgpIHtcbiAgICB0aGlzLnN0b3AoKTtcbiAgICB0aGlzLl9zdGF0dXMgPSBUaW1lci5TdGF0dXMuU1RBUlQ7XG5cbiAgICBzd2l0Y2ggKHRoaXMuX21vZCkge1xuICAgICAgY2FzZSBUaW1lci5Nb2QuVElDSzpcbiAgICAgICAgdGhpcy5fdGljaygpO1xuICAgICAgICByZXR1cm47XG5cbiAgICAgIGNhc2UgVGltZXIuTW9kLkNZQ0xFOlxuICAgICAgICB0aGlzLl9hY3Rpb24oKTtcbiAgICAgICAgdGhpcy5fY3ljbGUoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIHN0b3AoKSB7XG4gICAgaWYgKHRoaXMuX3RpbWVySUQgIT09IG51bGwpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lcklEKTtcbiAgICB9XG4gICAgdGhpcy5fc3RhdHVzID0gVGltZXIuU3RhdHVzLlNUT1A7XG4gIH1cblxuICBfdGljaygpIHtcbiAgICBjb25zdCBhY3Rpb25XaXRoU3RvcCA9ICgpID0+IHtcbiAgICAgIHRoaXMuX2FjdGlvbigpO1xuICAgICAgdGhpcy5zdG9wKCk7XG4gICAgfTtcblxuICAgIHRoaXMuX3RpbWVySUQgPSB0aGlzLl90eXBlID09PSBUaW1lci5UeXBlLlNFVF9USU1FT1VUID9cbiAgICAgIHNldFRpbWVvdXQoYWN0aW9uV2l0aFN0b3AsIHRoaXMuX2RlbGF5KSA6IHNldEludGVydmFsKGFjdGlvbldpdGhTdG9wLCB0aGlzLl9kZWxheSk7XG4gIH1cblxuICBfY3ljbGUoKSB7XG4gICAgdGhpcy5fdGltZXJJRCA9IHRoaXMuX3R5cGUgPT09IFRpbWVyLlR5cGUuU0VUX1RJTUVPVVQgP1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuX2FjdGlvbigpO1xuXG4gICAgICAgIGlmICh0aGlzLl9zdGF0dXMgPT09IFRpbWVyLlN0YXR1cy5TVEFSVCkge1xuICAgICAgICAgIHRoaXMuX2N5Y2xlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMuX2RlbGF5KSA6IHNldEludGVydmFsKCgpID0+IHRoaXMuX2FjdGlvbigpLCB0aGlzLl9kZWxheSk7XG4gIH1cbn1cblxuVGltZXIuVHlwZSA9IHtcbiAgU0VUX1RJTUVPVVQ6IGBzZXRUaW1lb3V0YCxcbiAgU0VUX0lOVEVSVkFMOiBgc2V0SW50ZXJ2YWxgXG59O1xuXG5UaW1lci5Nb2QgPSB7XG4gIFRJQ0s6IGB0aWNrYCxcbiAgQ1lDTEU6IGBjeWNsZWBcbn07XG5cblRpbWVyLlN0YXR1cyA9IHtcbiAgU1RPUDogYHN0b3BgLFxuICBTVEFSVDogYHN0YXJ0YFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVGltZXI7XG4iXX0=
