!function n(u,i,o){function a(t,e){if(!i[t]){if(!u[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(c)return c(t,!0);throw(r=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",r}r=i[t]={exports:{}},u[t][0].call(r.exports,function(e){return a(u[t][1][e]||e)},r,r.exports,n,u,i,o)}return i[t].exports}for(var c="function"==typeof require&&require,e=0;e<o.length;e++)a(o[e]);return a}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var t=this;this.__curVal=0,this.setVal=function(e){return t.__checkIsNaN(e)||(t.__curVal=e),t},this.getVal=function(){return t.__curVal},this.reset=function(){return t.__curVal=0,t},this.sum=function(e){return t.__checkIsNaN(e)||(t.__curVal+=e),t},this.minus=function(e){return t.__checkIsNaN(e)||(t.__curVal-=e),t},this.div=function(e){return t.__checkIsNaN(e)||(t.__curVal/=e),t},this.multiply=function(e){return t.__checkIsNaN(e)||(t.__curVal*=e),t},this.__checkIsNaN=function(e){e=!Number.isFinite(e);return e&&(t.__curVal=NaN),e}}},{}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var n=this;this.setProp=function(e,t,r){Object.defineProperty(n,e,Object.assign({value:void 0,writable:!0,configurable:!0,enumerable:!0},{value:t},r))}}},{}],3:[function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,u,i=[],o=!0,a=!1;try{for(r=r.call(e);!(o=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);o=!0);}catch(e){a=!0,u=e}finally{try{o||null==r.return||r.return()}finally{if(a)throw u}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var t=this;this.obj=Object.assign({},0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}),this.print=function(){var e=Object.entries(t.obj).map(function(e){var t=n(e,2),e=t[0],t=t[1];return"".concat(e,": ").concat(t)}).join(",");return console.log(e),e},Object.defineProperty(this,"print",{enumerable:!1})}},{}],4:[function(e,t,r){"use strict";var n=p(e("./utils/unify/unify")),u=p(e("./utils/reverse/reverse")),i=p(e("./utils/get-map/get-map")),o=p(e("./utils/get-props-sum/get-props-sum")),a=p(e("./utils/get-arithmetic-mean/get-arithmetic-mean")),c=p(e("./utils/get-types/get-types")),s=p(e("./utils/filter-by-range/filter-by-range")),l=p(e("./utils/compare-to-anagram/compare-to-anagram")),f=p(e("./classes/calc/calc")),d=p(e("./classes/viewer/viewer")),y=p(e("./classes/mutant/mutant"));function p(e){return e&&e.__esModule?e:{default:e}}window.tasks={task1:{desc:"На вход поступает массив, вывести массив, удалив неуникальные значения",run:n.default},task2:{desc:"На вход поступает массив, реверсировать значения (подобно методу reverse) метод reverse не использовать",run:u.default},task3:{desc:"На вход поступает массив, содержащий массивы, в которых хранится два элемента. Преобразовать массив в объект,\n    где ключами являются нулевой индекс вложенныхых массивов, а значениями являются элементы с индексом один",run:i.default},task4:{desc:"На вход поступает объект, вывести сумму числовых свойств объекта",run:o.default},task5:{desc:"На вход поступает массив с числами, вывести среднее арифметическое элементов массива",run:a.default},task6:{desc:'Создать функцию-конструктор для объекта "калькулятор", объект должен иметь поле,\n    хранящее текущее значение и методы сложения, вычитания, умножения и деления,\n    принимающие число и манипулирующий свойством значения в соответствии с назначением метода,\n    а так же функцию, сбрасывающую значение в ноль',run:function(){return new f.default}},task7:{desc:"Функция принимает смешанный массив (содержащий значения чисел, строк и объектов),\n    вернуть объект с полями numbers, strings и objects, содержащими массив со значениями,\n    соответствующими названию поля.",run:c.default},task8:{desc:"Функция принимает массив чисел и два числовых значения, вернуть новый массив, содержащий элементы первого массива,\n    значение которых попадает под диапазон переданных в функцию чисел (второе переданное число может быть больше первого)",run:s.default},task9:{desc:"Функция принимает две строки. Вывести true, если строки являются анаграммами, в противном случае false",run:l.default},task10:{desc:'Создать объект, выводящий в консоль все ключи и значения объекта в формате "ключ: значение" через запятую\n    (считать, что значением ключа объекта не может быть объектом или массивом, содержащими объекты)\n    сама функция в консоль выводиться не должна.',run:function(e){return new d.default(e)}},task11:{desc:"Создать функцию-конструктор для объекта, содержащего методы serProp (установить значение свойства),\n    метод принимает ключь (строка), значение (произвольное) и объект со свойствами writable, configurable,\n    enumerable (разрешение перезаписи свойства, разрешение перечисления свойства и разрешение удаления свойства).\n    Если какое-то из свойств в объекте отсутствует, действие должно быть разрешено",run:function(){return new y.default}}}},{"./classes/calc/calc":1,"./classes/mutant/mutant":2,"./classes/viewer/viewer":3,"./utils/compare-to-anagram/compare-to-anagram":5,"./utils/filter-by-range/filter-by-range":6,"./utils/get-arithmetic-mean/get-arithmetic-mean":7,"./utils/get-map/get-map":8,"./utils/get-props-sum/get-props-sum":9,"./utils/get-types/get-types":10,"./utils/reverse/reverse":11,"./utils/unify/unify":12}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e,t){if(void 0!==e&&void 0!==t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[t.length-1-r])return!1;return!0}}},{}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;function n(e){var t,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:-1/0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1/0;if(e)return n<r&&(r=(t=[n,r])[0],n=t[1]),e.filter(function(e){return r<=e&&e<=n})}r.default=n},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){return e&&0!==e.length?e.reduce(function(e,t){return e+=t},0)/e.length:void 0}},{}],8:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){return e?e.reduce(function(e,t){return 2<=t.length&&(e["".concat(t[0])]=t[1]),e},{}):void 0}},{}],9:[function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,u,i=[],o=!0,a=!1;try{for(r=r.call(e);!(o=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);o=!0);}catch(e){a=!0,u=e}finally{try{o||null==r.return||r.return()}finally{if(a)throw u}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){return e&&0!==Object.keys(e).length?Object.entries(e).reduce(function(e,t){t=n(t,2)[1];return e+=Number.isFinite(t)?t:0},0):void 0}},{}],10:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;function u(e){return e?e.reduce(function(e,t){switch(n(t)){case"number":e.numbers.push(t);break;case"string":e.strings.push(t);break;case"object":e.objects.push(t)}return e},{numbers:[],strings:[],objects:[]}):void 0}r.default=u},{}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){return e?e.map(function(e,t,r){return r[r.length-1-t]}):void 0}},{}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){return e?Array.from(new Set(e)):void 0}},{}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
