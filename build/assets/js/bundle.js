!function o(r,i,u){function a(e,t){if(!i[e]){if(!r[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(l)return l(e,!0);throw(n=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",n}n=i[e]={exports:{}},r[e][0].call(n.exports,function(t){return a(r[e][1][t]||t)},n,n.exports,o,r,i,u)}return i[e].exports}for(var l="function"==typeof require&&require,t=0;t<u.length;t++)a(u[t]);return a}({1:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,r=(o=t("./people"))&&o.__esModule?o:{default:o};function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var u=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this.prev=e.getPageNum(t.previous),this.next=e.getPageNum(t.next),this.peoples=r.default.parsePeoples(t.results),this.cur=null===this.prev?this.next-1:this.prev+1}var t,n,o;return t=e,o=[{key:"getPageNum",value:function(t){return null===t?null:Number(t.match(/(?<=page=)[0-9]+/)[0])}},{key:"parsePage",value:function(t){return new e(t)}}],(n=null)&&i(t.prototype,n),o&&i(t,o),e}();n.default=u},{"./people":2}],2:[function(t,e,n){"use strict";function r(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t.name,this.height=e.fixNum(t.height),this.mass=e.fixNum(t.mass),this.gender=t.gender}var t,n,o;return t=e,o=[{key:"fixNum",value:function(t){if(void 0===t)return"";t=Number(t.replace(",","."));return Number.isNaN(t)?-1:t}},{key:"parsePeoples",value:function(t){return t.map(function(t){return new e(t)})}}],(n=null)&&r(t.prototype,n),o&&r(t,o),e}();n.default=o},{}],3:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=t("../utils/dom.js");function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}n.default=function(){function t(){if(!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),(this instanceof t?this.constructor:void 0)===t)throw new Error("Can't instantiate AbstractComponent, only concrete one.");this._element=null}var e,n,o;return e=t,(n=[{key:"getElement",value:function(){return this._element||(this._element=(0,r.createElement)(this._getTemplate())),this._element}},{key:"removeElement",value:function(){this._element=null}},{key:"_getTemplate",value:function(){throw new Error("Abstract method not implemented: getTemplate")}}])&&i(e.prototype,n),o&&i(e,o),t}()},{"../utils/dom.js":16}],4:[function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,i=(o=t("./abstract-component"))&&o.__esModule?o:{default:o};function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return(a=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function l(n){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=s(n);return function(t,e){{if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined")}return function(t){if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t)}(this,o?(t=s(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function s(t){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var c=function(){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&a(t,e)}(r,i["default"]);var t,e,n,o=l(r);function r(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),o.call(this)}return t=r,(e=[{key:"_getTemplate",value:function(){return'<div class="table__loading"><div></div><div></div><div></div>'}}])&&u(t.prototype,e),n&&u(t,n),r}();n.default=c},{"./abstract-component":3}],5:[function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,u=(o=t("./abstract-component"))&&o.__esModule?o:{default:o},a=t("../utils/enum");function l(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function c(n){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=i(n);return function(t,e){{if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined")}return function(t){if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t)}(this,o?(t=i(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var f=function(){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(i,u["default"]);var t,e,n,r=c(i);function i(){var e,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:function(){},o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:function(){};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),(e=r.call(this))._onPrevBtnClick=n,e._onNextBtnClick=o,e._prevButton=e.getElement().querySelector(".table__nav-btn--prev"),e._nextButton=e.getElement().querySelector(".table__nav-btn--next"),e._navNum=e.getElement().querySelector(".table__nav-num"),e.getElement().addEventListener("click",function(t){return e._onNavClick(t)}),e.navNum=t,e}return t=i,(e=[{key:"navNum",set:function(t){this._navNum.textContent=t}},{key:"disablePrevButton",value:function(){this._prevButton.disabled=!0}},{key:"disableNextButton",value:function(){this._nextButton.disabled=!0}},{key:"enablePrevButton",value:function(){this._prevButton.disabled=!1}},{key:"enableNextButton",value:function(){this._nextButton.disabled=!1}},{key:"_onNavClick",value:function(t){t.preventDefault();t=t.target;if(t.nodeName===a.TagName.BUTTON)switch(t.dataset.value){case a.Nav.PREV:this._onPrevBtnClick();break;case a.Nav.NEXT:this._onNextBtnClick()}}},{key:"_getTemplate",value:function(){return'<nav class="table__nav" >\n                <button class="table__nav-btn table__nav-btn--prev" data-value="prev" disabled>Prev</button>\n                <p class="table__nav-page">Page: <span class="table__nav-num"></span></p>\n                <button class="table__nav-btn table__nav-btn--next" data-value="next" disabled>Next</button>\n            </nav>'}}])&&l(t.prototype,e),n&&l(t,n),i}();n.default=f},{"../utils/enum":17,"./abstract-component":3}],6:[function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,a=(o=t("./abstract-component"))&&o.__esModule?o:{default:o};function l(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function c(n){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=i(n);return function(t,e){{if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined")}return function(t){if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t)}(this,o?(t=i(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var u=function(){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(u,a["default"]);var t,e,n,i=c(u);function u(t){var e=t.name,n=t.height,o=t.mass,r=t.gender;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this))._name=e,t._height=n,t._mass=o,t._gender=r,t}return t=u,(e=[{key:"_getTemplate",value:function(){return'<li class="people">\n                    <p class="people__prop people__prop--name">'.concat(this._name,'</p>\n                    <p class="people__prop people__prop--height">').concat(this._height,'</p>\n                    <p class="people__prop people__prop--mass">').concat(this._mass,'</p>\n                    <p class="people__prop people__prop--gender">').concat(this._gender,"</p>\n                  </li>")}}])&&l(t.prototype,e),n&&l(t,n),u}();n.default=u},{"./abstract-component":3}],7:[function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,i=(o=t("./abstract-component"))&&o.__esModule?o:{default:o},u=t("../utils/enum");function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function s(n){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=c(n);return function(t,e){{if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined")}return function(t){if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t)}(this,o?(t=c(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var f=function(){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(r,i["default"]);var t,e,n,o=s(r);function r(t){var e,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:function(){};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),(e=o.call(this))._sortType=t,e._onSortTypeChange=n,e.getElement().querySelector('[data-sort-type="'.concat(e._sortType,'"]')).checked=!0,e.getElement().addEventListener("click",function(t){return e._onSortFormClick(t)}),e}return t=r,(e=[{key:"_onSortFormClick",value:function(t){var e=t.target;e.nodeName===u.TagName.LABEL&&(e=t.currentTarget.querySelector("#".concat(e.htmlFor)),this._sortType=e.dataset.sortType,this._onSortTypeChange(e.dataset.sortType))}},{key:"_getTemplate",value:function(){return'<form class="table__sort sort" method="get" action="#">\n                  <div class="sort__item">\n                    <input class="sort__input visually-hidden" id="sort-name" type="radio" name="sort" value="sort-name" data-sort-type="name">\n                    <label class="sort__label" for="sort-name">Name</label>\n                  </div>\n\n                  <div class="sort__item">\n                    <input class="sort__input visually-hidden" id="sort-height" type="radio" name="sort" value="sort-height" data-sort-type="height">\n                    <label class="sort__label" for="sort-height">Height</label>\n                  </div>\n\n                  <div class="sort__item">\n                    <input class="sort__input visually-hidden" id="sort-mass" type="radio" name="sort" value="sort-mass" data-sort-type="mass">\n                    <label class="sort__label" for="sort-mass">Mass</label>\n                  </div>\n\n                  <div class="sort__item">\n                    <input class="sort__input visually-hidden" id="sort-gender" type="radio" name="sort" value="sort-gender" data-sort-type="gender">\n                    <label class="sort__label" for="sort-gender">Gender</label>\n                  </div>\n                </form>'}}])&&a(t.prototype,e),n&&a(t,n),r}();n.default=f},{"../utils/enum":17,"./abstract-component":3}],8:[function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,i=(o=t("./abstract-component"))&&o.__esModule?o:{default:o};function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return(a=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function l(n){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=s(n);return function(t,e){{if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined")}return function(t){if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t)}(this,o?(t=s(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function s(t){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var c=function(){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&a(t,e)}(r,i["default"]);var t,e,n,o=l(r);function r(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),o.call(this)}return t=r,(e=[{key:"tableList",get:function(){return this.getElement().querySelector(".table__peoples")}},{key:"block",value:function(){this.getElement().classList.add("table--loading")}},{key:"unBlock",value:function(){this.getElement().classList.remove("table--loading")}},{key:"_getTemplate",value:function(){return'<section class="table">\n                <ul class="table__peoples"></ul>\n              </section>'}}])&&u(t.prototype,e),n&&u(t,n),r}();n.default=c},{"./abstract-component":3}],9:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=o(t("../components/table")),i=o(t("../components/sort-view")),u=o(t("../components/people")),a=o(t("../components/navigation")),l=o(t("../components/loading-view")),s=t("../utils/dom"),c=t("../utils/enum");function o(t){return t&&t.__esModule?t:{default:t}}function f(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}t=function(){function n(t,e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this._container=t,this._onPageChange=e,this._page={},this._table=new r.default,this._sortType=c.Sort.Type.NAME,this._sortMod=c.Sort.Mod.DOWN,this._sortView=new i.default(this._sortType,this._onSortTypeChange.bind(this)),this._nav=new a.default(null,this._onNavPrevClick.bind(this),this._onNavNextClick.bind(this)),this._loadView=new l.default,this._init()}var t,e,o;return t=n,(e=[{key:"setPage",value:function(t){this._page=t,this._nav.navNum=this._page.cur,this.loadingModOFF(),this._sort(),this._update()}},{key:"loadingModOFF",value:function(){null!==this._page.prev&&this._nav.enablePrevButton(),null!==this._page.next&&this._nav.enableNextButton(),(0,s.unmount)(this._loadView.getElement()),this._table.unBlock()}},{key:"_init",value:function(){(0,s.render)(this._container,this._table.getElement(),c.Position.AFTERBEGIN),(0,s.render)(this._table.getElement(),this._sortView.getElement(),c.Position.AFTERBEGIN),(0,s.render)(this._table.getElement(),this._nav.getElement(),c.Position.BEFOREEND),this._loadingModON()}},{key:"_onSortTypeChange",value:function(t){this._sortType===t?this._toggleSortMod():this._sortType=t,this._sort(),this._update()}},{key:"_toggleSortMod",value:function(){this._sortMod!==c.Sort.Mod.UP?this._sortMod=c.Sort.Mod.UP:this._sortMod=c.Sort.Mod.DOWN}},{key:"_sort",value:function(){var n=this;this._page.peoples.sort(function(t,e){if("number"==typeof t[n._sortType])return t[n._sortType]-e[n._sortType];t=t[n._sortType].toLowerCase(),e=e[n._sortType].toLowerCase();return e<t?1:t<e?-1:0}),this._sortMod===c.Sort.Mod.UP&&this._page.peoples.reverse()}},{key:"_loadingModON",value:function(){this._nav.disableNextButton(),this._nav.disablePrevButton(),(0,s.render)(this._table.getElement(),this._loadView.getElement(),c.Position.AFTERBEGIN),this._table.block()}},{key:"_onNavPrevClick",value:function(){null!==this._page.prev&&(this._loadingModON(),this._onPageChange(this._page.prev))}},{key:"_onNavNextClick",value:function(){null!==this._page.next&&(this._loadingModON(),this._onPageChange(this._page.next))}},{key:"_update",value:function(){var e=this;this._table.tableList.innerHTML="",this._page.peoples.forEach(function(t){(0,s.render)(e._table.tableList,new u.default(t).getElement(),c.Position.BEFOREEND)})}}])&&f(t.prototype,e),o&&f(t,o),n}();n.default=t},{"../components/loading-view":4,"../components/navigation":5,"../components/people":6,"../components/sort-view":7,"../components/table":8,"../utils/dom":16,"../utils/enum":17}],10:[function(t,e,n){"use strict";var o=t("./tasks/task-1"),r=t("./tasks/task-2"),i=t("./tasks/task-3"),t=document.querySelector("#task-1");(0,o.initTaskOne)(t);t=document.querySelector("#task-2");(0,r.initTaskTwo)(t);t=document.querySelector("#root");(0,i.initTaskThree)(t)},{"./tasks/task-1":11,"./tasks/task-2":12,"./tasks/task-3":13}],11:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.initTaskOne=void 0;var o,r=(o=t("../utils/timer"))&&o.__esModule?o:{default:o},i=t("../utils/count-from-to"),u=t("../utils/enum");n.initTaskOne=function(t){t.addEventListener("click",function(t){t.preventDefault();var e=t.currentTarget;t.target.nodeName===u.TagName.BUTTON&&e.reportValidity()&&((0,i.countFromTo)(Number(e.querySelector("#task-1l-I").value),Number(e.querySelector("#task-1l-J").value),{delay:1e3,mod:r.default.Mod.CYCLE,type:r.default.Type.SET_TIMEOUT},function(t){e.querySelector("#task-1l-R").value=t}),(0,i.countFromTo)(Number(e.querySelector("#task-1r-I").value),Number(e.querySelector("#task-1r-J").value),{delay:1e3,mod:r.default.Mod.CYCLE,type:r.default.Type.SET_INTERVAL},function(t){e.querySelector("#task-1r-R").value=t}))})}},{"../utils/count-from-to":15,"../utils/enum":17,"../utils/timer":19}],12:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.initTaskTwo=void 0;var o,r=t("../utils/count-from-to"),i=(o=t("../utils/timer"))&&o.__esModule?o:{default:o},u=t("../utils/num-word"),a=t("../utils/enum");n.initTaskTwo=function(t){t.addEventListener("click",function(t){t.preventDefault();var e=t.currentTarget;t.target.nodeName===a.TagName.BUTTON&&(0,r.countFromTo)(10,0,{delay:1e3,mod:i.default.Mod.CYCLE},function(t){e.querySelector(".work-area__msg-num").textContent=t,e.querySelector(".work-area__msg-sec").textContent=(0,u.numWord)(t,["секунда","секунды","секунд"]),0===t&&(window.location="https://maxima.life")})})}},{"../utils/count-from-to":15,"../utils/enum":17,"../utils/num-word":18,"../utils/timer":19}],13:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.initTaskThree=void 0;var o=i(t("../utils/api")),r=i(t("../controllers/table-controller"));function i(t){return t&&t.__esModule?t:{default:t}}n.initTaskThree=function(t){var e=new o.default,n=new r.default(t,function(t){e.getPage(t).then(function(t){n.setPage(t)}).catch(function(){alert("Connection error"),n.loadingModOFF()})});e.getPage().then(function(t){n.setPage(t)})}},{"../controllers/table-controller":9,"../utils/api":14}],14:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,r=(o=t("../adapters/page"))&&o.__esModule?o:{default:o};function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var u=function(){function o(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"https://swapi.dev/api/people";!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),this._endPoint=t}var t,e,n;return t=o,(e=[{key:"getPage",value:function(){return this._load({url:"?page=".concat(0<arguments.length&&void 0!==arguments[0]?arguments[0]:1)}).then(function(t){return t.json()}).then(function(t){return r.default.parsePage(t)})}},{key:"_load",value:function(t){var e=t.url,n=t.method,n=void 0===n?o.Method.GET:n,t=t.body,t=void 0===t?null:t;return fetch("".concat(this._endPoint,"/").concat(e),{method:n,body:t}).then(function(t){if(200<=t.status&&t.status<300)return t;throw new Error("".concat(t.status,": ").concat(t.statusText))}).catch(function(t){throw t})}}])&&i(t.prototype,e),n&&i(t,n),o}();u.Method={GET:"GET"},n.default=u},{"../adapters/page":1}],15:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.countFromTo=void 0;var o,i=(o=t("./timer"))&&o.__esModule?o:{default:o};n.countFromTo=function(t,e,n){var o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:function(){},r=new i.default(n);r.action=function(){o(t),t===e&&r.stop(),t<e&&t++,e<t&&t--},r.start()}},{"./timer":19}],16:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.unmount=n.render=n.createElement=void 0;var o=t("./enum");n.createElement=function(t){var e=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:o.ElementType.DEFAULT)===o.ElementType.DEFAULT?document.createElement("div"):document.createElement("tbody");return e.innerHTML=t,e.firstChild};n.render=function(t,e,n){switch(n){case o.Position.AFTERBEGIN:t.prepend(e);break;case o.Position.BEFOREEND:t.append(e)}};n.unmount=function(t){t&&t.remove()}},{"./enum":17}],17:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Nav=n.Sort=n.ElementType=n.TagName=n.Position=void 0;n.Position={AFTERBEGIN:"afterbegin",BEFOREEND:"beforeend"};n.TagName={INPUT:"INPUT",BUTTON:"BUTTON",LABEL:"LABEL"};n.ElementType={DEFAULT:"default",TABLE:"table"};n.Sort={Type:{NAME:"name",HEIGHT:"height",MASS:"mass",GENDER:"gender"},Mod:{DOWN:"down",UP:"up"}};n.Nav={PREV:"prev",NEXT:"next"}},{}],18:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.numWord=void 0;n.numWord=function(t,e){var n=(t=Math.abs(t)%100)%10;return 10<t&&t<20?e[2]:1<n&&n<5?e[1]:1==n?e[0]:e[2]}},{}],19:[function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=function(){function r(t){var e=t.action,n=void 0===e?function(){}:e,o=t.mod,e=void 0===o?r.Mod.TICK:o,o=t.delay,o=void 0===o?1e3:o,t=t.type,t=void 0===t?r.Type.SET_TIMEOUT:t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),this._timerID=null,this._delay=o,this._action=n,this._mod=e,this._type=t,this._status=r.Status.STOP}var t,e,n;return t=r,(e=[{key:"action",set:function(t){this.stop(),this._action=t}},{key:"delay",set:function(t){this.stop(),this._delay=t}},{key:"mod",set:function(t){this.stop(),this._mod=t}},{key:"type",set:function(t){this.stop(),this._type=t}},{key:"start",value:function(){switch(this.stop(),this._status=r.Status.START,this._mod){case r.Mod.TICK:return void this._tick();case r.Mod.CYCLE:return this._action(),void this._cycle()}}},{key:"stop",value:function(){null!==this._timerID&&clearTimeout(this._timerID),this._status=r.Status.STOP}},{key:"_tick",value:function(){function t(){e._action(),e.stop()}var e=this;this._timerID=(this._type===r.Type.SET_TIMEOUT?setTimeout:setInterval)(t,this._delay)}},{key:"_cycle",value:function(){var t=this;this._timerID=this._type===r.Type.SET_TIMEOUT?setTimeout(function(){t._action(),t._status===r.Status.START&&t._cycle()},this._delay):setInterval(function(){return t._action()},this._delay)}}])&&o(t.prototype,e),n&&o(t,n),r}();r.Type={SET_TIMEOUT:"setTimeout",SET_INTERVAL:"setInterval"},r.Mod={TICK:"tick",CYCLE:"cycle"},r.Status={STOP:"stop",START:"start"},n.default=r},{}]},{},[10]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
