!function n(u,i,o){function a(e,t){if(!i[e]){if(!u[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(l)return l(e,!0);throw(r=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",r}r=i[e]={exports:{}},u[e][0].call(r.exports,function(t){return a(u[e][1][t]||t)},r,r.exports,n,u,i,o)}return i[e].exports}for(var l="function"==typeof require&&require,t=0;t<o.length;t++)a(o[t]);return a}({1:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var e=this;this.__curVal=0,this.setVal=function(t){return e.__checkIsNaN(t)||(e.__curVal=t),e},this.getVal=function(){return e.__curVal},this.reset=function(){return e.__curVal=0,e},this.sum=function(t){return e.__checkIsNaN(t)||(e.__curVal+=t),e},this.minus=function(t){return e.__checkIsNaN(t)||(e.__curVal-=t),e},this.div=function(t){return e.__checkIsNaN(t)||(e.__curVal/=t),e},this.multiply=function(t){return e.__checkIsNaN(t)||(e.__curVal*=t),e},this.__checkIsNaN=function(t){t=!Number.isFinite(t);return t&&(e.__curVal=NaN),t}}},{}],2:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var n=this;this.setProp=function(t,e,r){Object.defineProperty(n,t,Object.assign({value:void 0,writable:!0,configurable:!0,enumerable:!0},{value:e},r))}}},{}],3:[function(t,e,r){"use strict";function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,u,i=[],o=!0,a=!1;try{for(r=r.call(t);!(o=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);o=!0);}catch(t){a=!0,u=t}finally{try{o||null==r.return||r.return()}finally{if(a)throw u}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Map"===(r="Object"===r&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(){var e=this;this.obj=Object.assign({},0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}),this.print=function(){var t=Object.entries(e.obj).map(function(t){var e=n(t,2),t=e[0],e=e[1];return"".concat(t,": ").concat(e)}).join(",");return console.log(t),t},Object.defineProperty(this,"print",{enumerable:!1})}},{}],4:[function(t,e,r){"use strict";var n=p(t("./utils/unify/unify")),u=p(t("./utils/reverse/reverse")),i=p(t("./utils/get-map/get-map")),o=p(t("./utils/get-props-sum/get-props-sum")),a=p(t("./utils/get-arithmetic-mean/get-arithmetic-mean")),l=p(t("./utils/get-types/get-types")),c=p(t("./utils/filter-by-range/filter-by-range")),s=p(t("./utils/compare-to-anagram/compare-to-anagram")),f=p(t("./classes/calc/calc")),d=p(t("./classes/viewer/viewer")),y=p(t("./classes/mutant/mutant")),t=p(t("./utils/get-uniq/get-uniq"));function p(t){return t&&t.__esModule?t:{default:t}}window.tasks={task1:{desc:"На вход поступает массив, вывести массив, удалив повторяемые значения",run:n.default},task1Alt:{desc:"На вход поступает массив, вывести массив, удалив неуникальные значения",run:t.default},task2:{desc:"На вход поступает массив, реверсировать значения (подобно методу reverse) метод reverse не использовать",run:u.default},task3:{desc:"На вход поступает массив, содержащий массивы, в которых хранится два элемента. Преобразовать массив в объект,\n    где ключами являются нулевой индекс вложенныхых массивов, а значениями являются элементы с индексом один",run:i.default},task4:{desc:"На вход поступает объект, вывести сумму числовых свойств объекта",run:o.default},task5:{desc:"На вход поступает массив с числами, вывести среднее арифметическое элементов массива",run:a.default},task6:{desc:'Создать функцию-конструктор для объекта "калькулятор", объект должен иметь поле,\n    хранящее текущее значение и методы сложения, вычитания, умножения и деления,\n    принимающие число и манипулирующий свойством значения в соответствии с назначением метода,\n    а так же функцию, сбрасывающую значение в ноль',run:function(){return new f.default}},task7:{desc:"Функция принимает смешанный массив (содержащий значения чисел, строк и объектов),\n    вернуть объект с полями numbers, strings и objects, содержащими массив со значениями,\n    соответствующими названию поля.",run:l.default},task8:{desc:"Функция принимает массив чисел и два числовых значения, вернуть новый массив, содержащий элементы первого массива,\n    значение которых попадает под диапазон переданных в функцию чисел (второе переданное число может быть больше первого)",run:c.default},task9:{desc:"Функция принимает две строки. Вывести true, если строки являются анаграммами, в противном случае false",run:s.default},task10:{desc:'Создать объект, выводящий в консоль все ключи и значения объекта в формате "ключ: значение" через запятую\n    (считать, что значением ключа объекта не может быть объектом или массивом, содержащими объекты)\n    сама функция в консоль выводиться не должна.',run:function(t){return new d.default(t)}},task11:{desc:"Создать функцию-конструктор для объекта, содержащего методы serProp (установить значение свойства),\n    метод принимает ключь (строка), значение (произвольное) и объект со свойствами writable, configurable,\n    enumerable (разрешение перезаписи свойства, разрешение перечисления свойства и разрешение удаления свойства).\n    Если какое-то из свойств в объекте отсутствует, действие должно быть разрешено",run:function(){return new y.default}}}},{"./classes/calc/calc":1,"./classes/mutant/mutant":2,"./classes/viewer/viewer":3,"./utils/compare-to-anagram/compare-to-anagram":5,"./utils/filter-by-range/filter-by-range":6,"./utils/get-arithmetic-mean/get-arithmetic-mean":7,"./utils/get-map/get-map":8,"./utils/get-props-sum/get-props-sum":9,"./utils/get-types/get-types":10,"./utils/get-uniq/get-uniq":11,"./utils/reverse/reverse":12,"./utils/unify/unify":13}],5:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t,e){if(void 0!==t&&void 0!==e){if(t.length!==e.length)return!1;for(var r=0;r<t.length;r++)if(t[r]!==e[e.length-1-r])return!1;return!0}}},{}],6:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;function n(t){var e,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:-1/0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1/0;if(t)return n<r&&(r=(e=[n,r])[0],n=e[1]),t.filter(function(t){return r<=t&&t<=n})}r.default=n},{}],7:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){return t&&0!==t.length?t.reduce(function(t,e){return t+=e},0)/t.length:void 0}},{}],8:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){return t?t.reduce(function(t,e){return 2<=e.length&&(t["".concat(e[0])]=e[1]),t},{}):void 0}},{}],9:[function(t,e,r){"use strict";function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,u,i=[],o=!0,a=!1;try{for(r=r.call(t);!(o=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);o=!0);}catch(t){a=!0,u=t}finally{try{o||null==r.return||r.return()}finally{if(a)throw u}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Map"===(r="Object"===r&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){return t&&0!==Object.keys(t).length?Object.entries(t).reduce(function(t,e){e=n(e,2)[1];return t+=Number.isFinite(e)?e:0},0):void 0}},{}],10:[function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;function u(t){return t?t.reduce(function(t,e){switch(n(e)){case"number":t.numbers.push(e);break;case"string":t.strings.push(e);break;case"object":t.objects.push(e)}return t},{numbers:[],strings:[],objects:[]}):void 0}r.default=u},{}],11:[function(t,e,r){"use strict";function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,u,i=[],o=!0,a=!1;try{for(r=r.call(t);!(o=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);o=!0);}catch(t){a=!0,u=t}finally{try{o||null==r.return||r.return()}finally{if(a)throw u}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Map"===(r="Object"===r&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){if(void 0!==t){t=t.reduce(function(t,e){return t.has(e)?t.set(e,t.get(e)+1):t.set(e,1),t},new Map);return Array.from(t).reduce(function(t,e){var r=n(e,2),e=r[0];return 1===r[1]&&t.push(e),t},[])}}},{}],12:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){return t?t.map(function(t,e,r){return r[r.length-1-e]}):void 0}},{}],13:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(t){return t?Array.from(new Set(t)):void 0}},{}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
